Process:
The admin selects the date for which attendance needs to be recorded.
The system pulls a list of students (from the students table) for that class.
The admin marks each student's attendance status (e.g., Present, Absent, Late) for that day.
The admin submits the data, which gets saved into the attendance table



Admin processes
Can view all students in the system
Can assign students to a class
Can remove students from a class
Can change a student's class
Can view attendance history



Lecturer
Can only view a number of classes(3-4)
Can view students in a particular group
Update student status(present, absent, etc.)
Can view all attendance history



Student
Can view his/her attendance history
Update personal details(age, DOB, etc.)




Pseudocode(Lecturer)
1. Lecturer logs in to system
2. Sign in using registered courses info(code, id, etc.)
3. Retrieves list of all students in the group he/she will be teaching
4. Mark student present or absent
5. Student comes an hour after class(mark as late)
6. Update attendance table





OLD SQL TABLE SYNTAX
-- Generated by the database client.
CREATE TABLE attendance(
    id uuid NOT NULL,
    student_id varchar NOT NULL,
    is_present boolean NOT NULL,
    marked_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    groupid varchar(1) NOT NULL,
    coursecode varchar NOT NULL,
    PRIMARY KEY(id),
    CONSTRAINT attendance_student_id_fkey FOREIGN key(student_id) REFERENCES students(indexnumber)
);

-- Generated by the database client.
CREATE TABLE authid(
    id varchar(10) NOT NULL,
    coursecode varchar NOT NULL,
    coursename varchar NOT NULL,
    PRIMARY KEY(id)
);

-- Generated by the database client.
CREATE TABLE lecturers(
    id uuid NOT NULL,
    coursecode varchar NOT NULL,
    fullname varchar NOT NULL,
    groupid varchar NOT NULL,
    coursename varchar NOT NULL,
    last_checked date,
    no_of_meetings integer,
    PRIMARY KEY(id)
);

-- Generated by the database client.
CREATE TABLE students(
    indexnumber varchar NOT NULL,
    fullname varchar NOT NULL,
    groupid varchar NOT NULL,
    coursecode varchar NOT NULL,
    checked boolean DEFAULT false,
    last_checked date,
    id varchar(50) NOT NULL,
    PRIMARY KEY(indexnumber)
);